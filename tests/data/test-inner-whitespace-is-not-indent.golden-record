(define (fizz-buzz limit)
  (for ([i (in-range 1 (add1 limit))])
    (let ([is-multiple-of-3 (zero? (modulo i 3))]
          [is-multiple-of-5 (zero? (modulo i 5))])
      (when is-multiple-of-3
        (write 'Fizz))
      (when is-multiple-of-5
        (write 'Buzz))
      (unless (or is-multiple-of-3 is-multiple-of-5)
        (write i))
      (newline))))
